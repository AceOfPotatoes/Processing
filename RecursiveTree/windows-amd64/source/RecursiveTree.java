/* autogenerated by Processing revision 1283 on 2022-08-01 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class RecursiveTree extends PApplet {

float angle;

 public void setup(){
  /* size commented out by preprocessor */;
}

 public void draw() { 
  stroke(255);
  background(16);
  translate(width/2, height); 
  angle = radians(mouseX / (float) width) * 90f;
  float l = (mouseY / 2.5f);
  branch(l); 
}

 public void branch(float len){
  line(0, 0, 0, -len);
  translate(0, -len);
  if(len > 2){
    push();
    rotate(-angle);
    branch(len*0.67f);
    pop();
    rotate(angle);
    branch(len*0.67f);
    
  } 
}


  public void settings() { size(1280, 720); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "RecursiveTree" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
